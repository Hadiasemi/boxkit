name: build-boxkit
on:
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 0 * * TUE'
  push:
    branches:
      - main
    paths-ignore:
      - '**/README.md'
env:
  IMAGE_NAME: boxkit
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}

jobs:
  push-ghcr:
    name: Build and push image
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      fail-fast: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Metadata
        id: meta
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            echo "TAG=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
          else
            echo "TAG=latest" >> $GITHUB_ENV
          fi

      - name: Build Image
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: ./Containerfile
          image: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: ${{ env.TAG }}
          labels: |
            org.opencontainers.image.created=${{ steps.meta.outputs.created }}
            org.opencontainers.image.source=${{ github.repository_url }}
            org.opencontainers.image.version=${{ github.sha }}
          oci: false
    
      - name: Lowercase Image Name
        run: echo "IMAGE_NAME=$(echo '${{ env.IMAGE_NAME }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
        
      - name: Push To GHCR
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: ${{ env.TAG }}
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}


      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.3.0
        
      - name: Decode Cosign Private Key
        run: echo "${{ secrets.COSIGN_PRIVATE_KEY }}" | base64 -d > cosign.key
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}


      - name: Decode Cosign Private Key
        run: echo "${{ secrets.COSIGN_PRIVATE_KEY }}" | base64 -d > cosign.key
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}


      - name: Echo outputs
        run: echo "${{ toJSON(steps.push.outputs) }}"
